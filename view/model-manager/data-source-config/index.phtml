<?php
$adapters = array(
    'Mysql'   => 'Mysql',
    'Oracle'  => 'Oracle',
    'IbmDB2'  => 'IbmDB2',
    'Sqlite'  => 'Sqlite',
    'Pgsql'   => 'Pgsql',
    'Sqlsrv'  => 'Sqlsrv',
    'Restful' => 'Restful',
);
?>
<div>
    <form id="modelManager-databaseConfig-index">
        数据源名称: <input required name="name" class="k-textbox"><br>
        选择数据源: <?= $this->formSelect(new \Zend\Form\Element\Select('adapter', ['options' => $adapters])) ?><br>

        数据源配置:
        <div>
            <div role="modelManager-dataSourceConfig-db">
                地址: <input required name="driver_options[hostname]" class="k-textbox"><br>
                用户名: <input required name="driver_options[username]" class="k-textbox"><br>
                密码: <input name="driver_options[password]" class="k-textbox"><br>
                端口: <input name="driver_options[port]" class="k-textbox"><br>
                数据库: <input required name="driver_options[database]" class="k-textbox"><br>
                数据库编码: <input name="driver_options[charset]" class="k-textbox"><br>
                <input type="submit" value="提交">
            </div>
            <div role="modelManager-dataSourceConfig-restful">
                地址: <input required name="url" type="url" class="k-textbox"><br>
                数据字段:
                <div data-type="restful">
                    <button id="dataSourceConfig-restful-add" type="button">添加</button>
                    <div>
                        <div><input type="text" name="fields[]"><button type="button">删除</button></div>
                    </div>
                </div>
                <input type="submit" value="提交">
            </div>
        </div>
    </form>

    <div>
        <table>

        </table>
    </div>
</div>

<script>
    $(function () {
        var $restfulAddButton = $('#dataSourceConfig-restful-add'),
            $restfulAddContext = $('#dataSourceConfig-restful-add').next(),
            $restfulFieldObj = $restfulAddContext.children('div');

        $restfulAddContext.on('click', 'button', function () {
            $(this).parent().remove();
        });
        $restfulAddButton.click(function () {
            $restfulAddContext.append($restfulFieldObj.clone());
        });

        var $o = $('#modelManager-databaseConfig-index'),
            $divForm = $o.find('>div'),
            $divRestful = $o.find('div[role=modelManager-dataSourceConfig-restful]'),
            $divDb = $o.find('div[role=modelManager-dataSourceConfig-db]');
        $o.find('select[name=adapter]').change(function () {
            if (this.value == 'Restful') {
                $divDb.detach();
                $divRestful.appendTo($divForm);
            } else {
                $divRestful.detach();
                $divDb.appendTo($divForm);
            }
        }).change();
        $o.submit(function (e) {
            e.preventDefault();

            $.post(
                '<?=$this->url('zfegg-model-manager/params', ['controller' => 'data-source-config', 'action' => 'add'])?>',
                $(this).serialize(),
                function () {
                    alert('添加成功');
                }
            );
        });
    });

</script>


<div id="modelManager-databaseConfig-index-grid"></div>

<script>
    $(function () {
        var editors = {
            editor: function (container, options) {
                $('<textarea>').appendTo(container).kendoEditor({ resizable: true });
            }
        };
        var config = <?=Zend\Json\Json::encode($config, false, array('enableJsonExprFinder' => true));?>;
        var gridSettings = {};

        if (config.columns) {
            gridSettings.columns = config.columns;
        }
        if (config.detailEnable) {
            gridSettings.detailTemplate = config.detailTemplate;
        }
        if (config.toolbar) {
            gridSettings.toolbar= config.toolbar;
        }

        var $grid = $('#modelManager-databaseConfig-index-grid'),
            serviceUrl = '<?=$this->url(null, ['controller' => $id])?>',
            dataSource = new kendo.data.DataSource({
                transport: {
                    read: '<?=$this->url(null, ['controller' => $id, 'action' => 'read'])?>',
                    update: '<?=$this->url(null, ['controller' => $id, 'action' => 'update'])?>',
                    destroy: '<?=$this->url(null, ['controller' => $id, 'action' => 'delete'])?>',
                    create: '<?=$this->url(null, ['controller' => $id, 'action' => 'insert'])?>'
                },
                schema: {
                    model: {
                        id: config.primary,
                        fields: config.fields
                    },
                    "data": "data",
                    "total": "total"
                },
                pageSize: 20,
                serverFiltering: true,
                serverPaging: true,
                serverSorting: true
            });

        $grid.kendoGrid($.extend({
            dataSource: dataSource,
            filterable: {
                extra: false,
                messages: {
                    info: "查找: ",
                    filter: "提交",
                    clear: "清除",
                    selectValue: "------选择------",
                    and: "并且",
                    or: "或者"
                },
                operators: {
                    string: {
                        eq: "等于",
                        startswith:"右模糊查找",
                        contains: "模糊查找"
                    },
                    number: {
                        eq: "等于"
                    },
                    date: {
                        ge: "大于等于",
                        le: "小于",
                        gt: "大于",
                        lt: "小于"
                    },
                    enums: {
                        eq: "满足条件"
                    }
                }
            },
            columns: [],
            selectable: true,
            editable: {
                mode: "popup",
                window: {
                    width: 600
                }
            },
            sortable: true,
            change: function () {
                $toolbar.find('a.k-button').removeAttr('disabled');
            },
            pageable: {
                pageSizes: [20, 50, 100]
            }
        }, gridSettings));

        var kGrid = $grid.data('kendoGrid'),
            $toolbar = $grid.find('.k-grid-toolbar');

        $toolbar.on('click', 'a', function () {

            var action = $(this).data('action');

            if (action == 'edit') {
                kGrid.select().each(function () {
                    kGrid.editRow(this);
                });
            } else if (action == 'destroy') {
                kGrid.select().each(function () {
                    kGrid.removeRow(this);
                });
            } else if (action == 'create') {
                return ;
            } else if (action == 'excel') {
                window.location = '<?=$this->url(null, ['controller' => $id, 'action' => 'export-excel'])?>?'
                + $.param({
                    filter: kGrid.dataSource.filter(),
                    sort: kGrid.dataSource.filter()
                });
            } else {
                kGrid.select().each(function () {
                    $.post(
                        '<?=$this->url(null, ['controller' => $id, 'action' => 'execute'])?>',
                        {
                            method: action,
                            row: kGrid.dataItem(this).toJSON()
                        },
                        function (r) {
                            if (r.code === 0) {
                                alert(r.msg);
                            } else {
                                alert(r.msg);
                            }
                        }
                    );
                });
            }
        });
    });
</script>