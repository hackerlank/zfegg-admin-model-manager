<form id="modelManager-dataSourceConfig-add" action="<?= $this->url(null, [], true) ?>">
    <div class="k-edit-form-container">
        <fieldset>
            <legend>基础配置:</legend>
            <div class="k-edit-label"><label for="name">数据源名称</label></div>
            <div class="k-edit-field">
                <input type="text" class="k-input k-textbox" name="name" required="required">
            </div>
            <div class="k-edit-label"><label for="adapter">数据源适配器</label></div>
            <div class="k-edit-field">
                <select name="adapter" required>
                    <option value="DbAdapter">DbAdapter</option>
                    <option value="JsonRpc">JsonRPC</option>
                </select>
            </div>
        </fieldset>

        <fieldset>
            <legend>适配器配置:</legend>
            <div name="adapter_options-container"></div>
        </fieldset>
        <fieldset>
            <legend>数据源字段配置:</legend>
            <table name="fields-container">
                <thead>
                <tr>
                    <th>字段名</th>
                    <th>类型</th>
                    <th>默认值</th>
                    <th>可编辑</th>
                    <th>可为空</th>
                </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </fieldset>
        <div class="k-edit-buttons k-state-default">
            <button class="k-button k-button-icontext k-primary k-grid-update" type="submit">提交</button>
        </div>
    </div>
</form>
<script type="text/x-kendo-template" id="modelManager-databaseConfig-template-fields">
    # for (var name in fields) { #
    <tr>
        <td>#:name#
            # fields[name].primary ? '<input type="hidden" name="fields['+name+'][primary]" value="1">' : '' #
        </td>
        <td><select name="fields[#:name#][type]">
                <option value="string" # fields[name].type== 'string' ? 'selected' : '' #>String</option>
                <option value="number" # fields[name].type== 'number' ? 'selected' : '' #>Number</option>
                <option value="date" # fields[name].type== 'date' ? 'selected' : '' #>Date</option>
                <option value="boolean" # fields[name].type== 'boolean' ? 'selected' : '' #>Boolean</option>
            </select></td>
        <td><input name="fields[#:name#][defaultValue]" type="text" value="#:fields[name].defaultValue || ''#"></td>
        <td><input name="fields[#:name#][editable]" type="checkbox" #:fields[name].editable ? "checked" : ""# value="1"></td>
        <td><input name="fields[#:name#][nullable]" type="checkbox" #:fields[name].nullable ? "checked" : ""# value="1"></td>
    </tr>
    # } #
</script>

<style>
    .modelManager-adapter-queryOptions {
        float: left;
        margin-right: 8px;
        min-width: 150px;
    }
</style>
<script type="text/x-kendo-template" id="modelManager-databaseConfig-template-adapter-dbadapter">
    <div>
        <fieldset>
            <legend>数据库配置</legend>
            <div class="k-edit-label"><label>数据库类型</label></div>
            <div class="k-edit-field">
                <select name="adapter_options[driver_options][driver]" required="required" data-bind="adapter_options">
                    <option value="pdo_mysql">Mysql</option>
                    <option value="ibmdb2">ibmdb2</option>
                    <option value="pdo_oci">Oracle</option>
                    <option value="pdo_pgsql">PgSql</option>
                    <option value="pdo_sqlite">Sqlite</option>
                    <option value="pdo_sqlsrv">SqlServer</option>
                </select>
            </div>
            <div class="k-edit-label"><label>地址</label></div>
            <div class="k-edit-field">
                <input type="text" class="k-input k-textbox" name="adapter_options[driver_options][hostname]"
                       required="required" value="192.168.39.18">
            </div>
            <div class="k-edit-label"><label>用户名</label></div>
            <div class="k-edit-field">
                <input type="text" class="k-input k-textbox" name="adapter_options[driver_options][username]"
                       required="required" value="root">
            </div>
            <div class="k-edit-label"><label>密码</label></div>
            <div class="k-edit-field">
                <input type="text" class="k-input k-textbox" name="adapter_options[driver_options][password]"
                       value="ztgame@123">
            </div>
            <div class="k-edit-label"><label>端口</label></div>
            <div class="k-edit-field">
                <input type="text" class="k-input k-textbox" name="adapter_options[driver_options][port]">
            </div>
            <div class="k-edit-label"><label>数据库</label></div>
            <div class="k-edit-field">
                <input type="text" class="k-input k-textbox" name="adapter_options[driver_options][database]"
                       required="required" value="redmine">
            </div>
            <div class="k-edit-label"><label>数据库编码</label></div>
            <div class="k-edit-field">
                <input type="text" class="k-input k-textbox" name="adapter_options[driver_options][charset]"
                    >
            </div>
            <div class="k-edit-field">
                <button type="button" data-name="test">测试数据库连接</button>
            </div>
        </fieldset>
        <fieldset>
            <legend>查询配置</legend>
            <div class="k-edit-label"><label>配置模式</label></div>
            <div class="k-edit-field">
                <label><input type="radio" name="adapter_options[query_options][mode]" value="normal" checked> 普通模式
                </label>&nbsp;
                <label><input disabled type="radio" name="adapter_options[query_options][mode]" value="sql"> SQL模式
                </label><br>
            </div>
            <div class="clear"></div>
            <fieldset role="mode_normal">
                <legend>普通模式:</legend>
                <div class="modelManager-adapter-queryOptions">
                    选择查询表:<br>
                    <select name="adapter_options[query_options][table]" size="10">
                    </select>
                </div>
                <div class="modelManager-adapter-queryOptions">
                    选择查询字段:<br>
                    <select name="adapter_options[query_options][column][]" multiple size="10">
                    </select>
                </div>
                <div class="modelManager-adapter-queryOptions" role="where">
                    选择默认查询条件:<br>

                    <p>
                        <select name="adapter_options[query_options][where][left][]">
                        </select>
                        <select name="adapter_options[query_options][where][operator][]">
                            <option value="=">=</option>
                            <option value="<>">&lt;&gt;</option>
                            <option value="<">&lt;</option>
                            <option value="<=">&lt;=</option>
                            <option value=">">&gt;</option>
                            <option value=">=">&gt;=</option>
                            <option value="like">like</option>
                            <option value="notLike">not like</option>
                            <option value="isNull">is null</option>
                            <option value="isNotNull">is not null</option>
                        </select>
                        <input name="adapter_options[query_options][where][right][]">
                        <button type="button" value="-">-</button>
                    </p>
                    <button type="button" value="+">+</button>
                </div>
                <div class="modelManager-adapter-queryOptions">
                    选择默认排序:<br>
                    <select name="adapter_options[query_options][order][]" multiple size="10">
                    </select>
                </div>
                <div class="clear"></div>
                <br>

                <div>
                    SQL 预览:<br>
                    <pre role="pre_sql"></pre>
                </div>
            </fieldset>
            <div class="clear"></div>
            <fieldset>
                <legend>SQL模式:</legend>
                SQL 语句:
                <textarea rows="10" name="adapter_options[query_options][sql]" class="k-textbox"></textarea>
            </fieldset>
        </fieldset>
    </div>
</script>

<script type="text/x-kendo-template" id="modelManager-databaseConfig-template-adapter-jsonrpc">
    <div>
        <div class="k-edit-label"><label>URL地址</label></div>
        <div class="k-edit-field">
            <input required name="adapter_options[url]" type="url" class="k-textbox">
        </div>
        <div class="k-edit-label"><label></label></div>
        <div class="k-edit-field">
            <button type="button" data-name="test-jsonrpc">字段检测</button>
        </div>
    </div>
</script>

<script>
    $(function () {

        var $container = $('#modelManager-dataSourceConfig-add'),

            kTmplDb = kendo.template($('#modelManager-databaseConfig-template-adapter-dbadapter').html()),
            kTmplJsonPpc = kendo.template($('#modelManager-databaseConfig-template-adapter-jsonrpc').html()),
            kTmplFields = kendo.template($('#modelManager-databaseConfig-template-fields').html()),
            initDbEvent = function () {
                var $view = $(kTmplDb({}));
                $view.find('button[data-name=test]').click(function () {
                    var $tmpForm = $('<form>');
                    $tmpForm.append($(this).closest('fieldset').clone());
                    $tmpForm.submit(function () {
                        $.post(
                            '<?=$this->url(null, ['action' => 'test-db-connection'], true)?>',
                            $tmpForm.serialize(),
                            function (r) {
                                if (r.errors) {
                                    alert(r.errors);
                                } else {
                                    alert('连接成功');
                                    initDbSelectMode($view, r.tables);
                                }
                            }
                        );
                        return false;
                    }).submit();
                });

                return $view;
            },
            initDbSelectMode = function ($elm, tables) {
                var getSelect = function (name) {
                        return $('select[name^="adapter_options[query_options][' + name + ']"]', $elm);
                    },
                    $selectTable = getSelect('table'),
                    $selectColumn = getSelect('column'),
                    $selectOrder = getSelect('order'),
                    $whereSelect = $('div[class=modelManager-adapter-queryOptions][role=where]', $elm),
                    $whereItem = $whereSelect.children('p').clone(),
                    $viewNormalMode = $('fieldset[role="mode_normal"]', $elm),
                    $sqlPreview = $('pre[role=pre_sql]', $elm)
                    ;
                $whereSelect.children('p').remove();
                $whereSelect.on('click', 'button[value="+"]', function () {
                    $(this).before($whereItem.clone());
                }).on('click', 'button[value="-"]', function () {
                    $(this).parent().remove();
                });
                $selectTable.change(function () {
                    $selectColumn.empty();
                    $selectOrder.empty();
                    $whereSelect.children('p').remove();
                    $whereItem.find('select:eq(0)').children('option').remove();
                    var table = this.value;
                    $.each(tables[table], function (column, attrs) {

                        $selectColumn.append('<option value="' + column + '">' + column + '</option>');
                        $selectOrder.append('<option value="' + column + ' ASC">' + column + ' ASC</option>');
                        $selectOrder.append('<option value="' + column + ' DESC">' + column + ' DESC</option>');
                        $whereItem.find('select:eq(0)').append('<option value="' + column + '">' + column + '</option>');
                    });
                });
                $.each(tables, function (table, columns) {
                    $selectTable.append('<option value="' + table + '">' + table + '</option>');
                });

                $elm.on('change', 'select,input', function () {
                    var sql = "SELECT ";

                    if ($selectColumn.val()) {
                        sql += $selectColumn.val().join(', ');
                    } else {
                        sql += ' * ';
                    }
                    sql += ' FROM ';
                    sql += $selectTable.val();

                    if ($whereSelect.find('select[name="adapter_options[query_options][where][left][]"]').size()) {
                        var conds = [];
                        $whereSelect.find('select[name="adapter_options[query_options][where][left][]"]').each(function () {
                            conds.push(this.value + ' ' + $(this).next().val() + ' ' + JSON.stringify($(this).next().next().val()));
                        });
                        if (conds.length) {
                            sql += ' WHERE ' + conds.join(' AND ');
                        }
                    }

                    if ($selectOrder.val()) {
                        sql += ' ORDER BY ';
                        var sorts = [];
                        $.each($selectOrder.val(), function (i, val) {
                            sorts.push(val);
                        });
                        sql += sorts.join(',');
                    }

                    $sqlPreview.html(sql);

                    if ($selectColumn.val()) {
                        var selectColumns = {};
                        $.each($selectColumn.val(), function (i, name) {
                            selectColumns[name] = tables[$selectTable.val()][name];
                        });
                    } else {
                        selectColumns = tables[$selectTable.val()];
                    }
                    $fieldsContainer.trigger('init', [selectColumns]);
                });
            },
            initJsonRpc = function () {
                var $view = $(kTmplJsonPpc({}));

                var $url = $view.find('input[name="adapter_options[url]"]');
                $view.on('click', 'button[data-name="test-jsonrpc"]', function (e) {
                    $.post(
                        '<?=$this->url(null, ['action' => 'test-jsonrpc'], true)?>',
                        {url: $url.val()},
                        function (r) {
                            if (r.errors) {
                                alert(r.errors);
                            } else {
                                alert('连接成功');
                                $fieldsContainer.trigger('init', [r.fields]);
                            }
                        }
                    );
                });

                return $view;
            };

        var $optionsContainer = $('div[name="adapter_options-container"]', $container),
            $adapterSelect = $('select[name=adapter]', $container),
            $fieldsContainer = $container.find('table[name="fields-container"]');

        $adapterSelect.change(function () {
            var $viewType = this.value.toLowerCase() == 'jsonrpc' ? initJsonRpc() : initDbEvent();

            $optionsContainer.empty().append($viewType);
        }).change();
        $fieldsContainer.bind('init', function (e, fields) {
            var $tbody = $(this).find('tbody');
            $tbody.empty();
            $tbody.append(kTmplFields({fields: fields}));
        });
        $container.submit(function (e) {
            e.preventDefault();
            $.post(this.action, $(this).serialize(), function (r) {
                if (r.code === 0) {
                    alert('添加成功');
                } else {
                    alert(r.errors || '操作失败');
                }
            });
        });
    });

    /*
     $(function () {
     var $restfulAddButton = $('#dataSourceConfig-restful-add'),
     $restfulAddContext = $('#dataSourceConfig-restful-add').next(),
     $restfulFieldObj = $restfulAddContext.children('div');

     $restfulAddContext.on('click', 'button', function () {
     $(this).parent().remove();
     });
     $restfulAddButton.click(function () {
     $restfulAddContext.append($restfulFieldObj.clone());
     });

     var $o = $('#modelManager-databaseConfig-index'),
     $divForm = $o.find('>div'),
     $divRestful = $o.find('div[role=modelManager-dataSourceConfig-restful]'),
     $divDb = $o.find('div[role=modelManager-dataSourceConfig-db]');
     $o.find('select[name=adapter]').change(function () {
     if (this.value == 'Restful') {
     $divDb.detach();
     $divRestful.appendTo($divForm);
     } else {
     $divRestful.detach();
     $divDb.appendTo($divForm);
     }
     }).change();
     $o.submit(function (e) {
     e.preventDefault();

     $.post(
     '<?=$this->url('zfegg-model-manager/params', ['controller' => 'data-source-config', 'action' => 'add'])?>',
     $(this).serialize(),
     function () {
     alert('添加成功');
     }
     );
     });
     });*/
</script>
