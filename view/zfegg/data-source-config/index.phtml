<script type="text/x-kendo-template" id="modelManager-databaseConfig-template"  data-bind="value&#x3A;adapter">
    <div class="k-edit-form-container">
        <fieldset>
            <legend>基础配置:</legend>
            <div class="k-edit-label"><label for="name">数据源名称</label></div>
            <div class="k-edit-field">
                <input type="text" class="k-input k-textbox" name="name" required="required" data-bind="value:name">
            </div>
            <div class="k-edit-label"><label for="adapter">数据源适配器</label></div>
            <div class="k-edit-field">
                <?php
                $select = new \Zend\Form\Element\Select(
                    'adapter',
                    ['options' => array_combine($adapters, $adapters),]
                );
                $select->setAttributes([
                    'required' => true,
                    'data-bind' => 'value:adapter',
                    'data-role' => 'dropdownlist',
                ]);
                echo $this->formSelect($select);?>
            </div>
        </fieldset>

        <fieldset type="adapter_options-container">
            <legend>适配器配置:</legend>
            <div type="db" class="hidden">
                <fieldset>
                    <legend>数据库配置</legend>
                    <div class="k-edit-label"><label>地址</label></div>
                    <div class="k-edit-field">
                        <input type="text" class="k-input k-textbox" data-name="adapter_options[driver_options][hostname]" required="required" data-bind="value:adapter_options.driver_options.hostname">
                    </div>
                    <div class="k-edit-label"><label>用户名</label></div>
                    <div class="k-edit-field">
                        <input type="text" class="k-input k-textbox" data-name="adapter_options[driver_options][username]" required="required" data-bind="value:adapter_options.driver_options.username">
                    </div>
                    <div class="k-edit-label"><label>密码</label></div>
                    <div class="k-edit-field">
                        <input type="text" class="k-input k-textbox" data-name="adapter_options[driver_options][password]" required="required" data-bind="value:adapter_options.driver_options.password">
                    </div>
                    <div class="k-edit-label"><label>端口</label></div>
                    <div class="k-edit-field">
                        <input type="text" class="k-input k-textbox" data-name="adapter_options[driver_options][port]" required="required" data-bind="value:adapter_options.driver_options.port">
                    </div>
                    <div class="k-edit-label"><label>数据库</label></div>
                    <div class="k-edit-field">
                        <input type="text" class="k-input k-textbox" data-name="adapter_options[driver_options][database]" required="required" data-bind="value:adapter_options.driver_options.database">
                    </div>
                    <div class="k-edit-label"><label>数据库编码</label></div>
                    <div class="k-edit-field">
                        <input type="text" class="k-input k-textbox" data-name="adapter_options[driver_options][charset]" required="required" data-bind="value:adapter_options.driver_options.charset">
                    </div>
                    <div class="k-edit-field">
                        <button type="button">测试数据库连接</button>
                    </div>
                </fieldset>
                <fieldset>
                    <legend>查询配置</legend>
                    <div class="k-edit-label"><label>配置模式</label></div>
                    <div class="k-edit-field">
<!--                        <input type="radio" name="adapter_options[query_mode]" value="normal" checked> 普通模式 <br>-->
<!--                        <input type="radio" name="adapter_options[query_mode]" value="sql"> SQL模式 <br>-->
                    </div>
                    <fieldset>
                        <legend>普通模式:</legend>
<!--                        查询表: <select name="adapter_options[table]" id="ui-config-tables">-->
<!--                            <option value=""> -- 选择数据表 --</option>-->
<!--                        </select>-->
                    </fieldset>

                    <fieldset>
                        <legend>SQL模式:</legend>
                        SQL 语句:
                        <textarea rows="10" name="sql" class="k-textbox"></textarea>
                    </fieldset>
                </fieldset>
            </div>
            <div type="jsonrpc" class="hidden">
                <div class="k-edit-label"><label>URL地址</label></div>
                <div class="k-edit-field">
<!--                    <input required name="adapter_options[url]" type="url" class="k-textbox">-->
                </div>
                <div class="k-edit-label"><label></label></div>
                <div class="k-edit-field">
                    <button>字段检测</button>
                </div>
            </div>
        </fieldset>

        <fieldset>
            <legend>数据源字段配置:</legend>

            <table>
                <thead>
                    <tr>
                        <th></th>
                        <th>字段名</th>
                        <th>类型</th>
                        <th>默认值</th>
                        <th>可编辑</th>
                        <th>可为空</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><input type="checkbox" checked value="1"></td>
                        <td>x</td>
                        <td><select>
                                <option value="string">String</option>
                                <option value="Int">Int</option>
                                <option value="datetime">DataTime</option>
                                <option value="Enum">Enum</option>
                            </select></td>
                        <td><input type="text"></td>
                        <td><input type="checkbox" checked value="1"></td>
                        <td><input type="checkbox" checked value="1"></td>
                    </tr>
                </tbody>
            </table>
        </fieldset>
    </div>
</script>


<div id="modelManager-databaseConfig-index-grid"></div>

<script>
    $(function () {
        var editors = {
            editor: function (container, options) {
                $('<textarea>').appendTo(container).kendoEditor({resizable: true});
            }
        };
        var config = <?=Zend\Json\Json::encode($config, false, array('enableJsonExprFinder' => true));?>;
        var gridSettings = {};

        if (config.columns) {
            gridSettings.columns = config.columns;
        }
        if (config.detailEnable) {
            gridSettings.detailTemplate = config.detailTemplate;
        }
        if (config.toolbar) {
            gridSettings.toolbar = config.toolbar;
        }

        var $grid = $('#modelManager-databaseConfig-index-grid'),
            serviceUrl = '<?=$this->url(null, ['controller' => $id])?>',
            dataSource = new kendo.data.DataSource({
                transport: {
                    read: '<?=$this->url(null, ['controller' => $id, 'action' => 'read'])?>',
                    update: '<?=$this->url(null, ['controller' => $id, 'action' => 'update'])?>',
                    destroy: '<?=$this->url(null, ['controller' => $id, 'action' => 'delete'])?>',
                    create: '<?=$this->url(null, ['controller' => $id, 'action' => 'insert'])?>'
                },
                schema: {
                    model: {
                        id: config.primary,
                        fields: config.fields
                    },
                    "data": "data",
                    "total": "total"
                },
                pageSize: 20,
                serverFiltering: true,
                serverPaging: true,
                serverSorting: true
            });

        $grid.kendoGrid($.extend({
            dataSource: dataSource,
            filterable: {
                extra: false,
                messages: {
                    info: "查找: ",
                    filter: "提交",
                    clear: "清除",
                    selectValue: "------选择------",
                    and: "并且",
                    or: "或者"
                },
                operators: {
                    string: {
                        eq: "等于",
                        startswith: "右模糊查找",
                        contains: "模糊查找"
                    },
                    number: {
                        eq: "等于"
                    },
                    date: {
                        ge: "大于等于",
                        le: "小于",
                        gt: "大于",
                        lt: "小于"
                    },
                    enums: {
                        eq: "满足条件"
                    }
                }
            },
            columns: [],
            selectable: true,
            editable: {
                mode: "popup",
                window: {
                    width: '100%'
                },
                template: kendo.template($("#modelManager-databaseConfig-template").html().replace('&#x3A;', ':'))
            },
            sortable: true,
            change: function () {
                $toolbar.find('a.k-button').removeAttr('disabled');
            },
            pageable: {
                pageSizes: [20, 50, 100]
            }
        }, gridSettings));

        var kGrid = $grid.data('kendoGrid'),
            $toolbar = $grid.find('.k-grid-toolbar');

        $toolbar.on('click', 'a', function () {

            var action = $(this).data('action');

            if (action == 'edit') {
                kGrid.select().each(function () {
                    kGrid.editRow(this);
                });
            } else if (action == 'destroy') {
                kGrid.select().each(function () {
                    kGrid.removeRow(this);
                });
            } else if (action == 'create') {
                return;
            } else if (action == 'excel') {
                window.location = '<?=$this->url(null, ['controller' => $id, 'action' => 'export-excel'])?>?'
                + $.param({
                    filter: kGrid.dataSource.filter(),
                    sort: kGrid.dataSource.filter()
                });
            } else {
                kGrid.select().each(function () {
                    $.post(
                        '<?=$this->url(null, ['controller' => $id, 'action' => 'execute'])?>',
                        {
                            method: action,
                            row: kGrid.dataItem(this).toJSON()
                        },
                        function (r) {
                            if (r.code === 0) {
                                alert(r.msg);
                            } else {
                                alert(r.msg);
                            }
                        }
                    );
                });
            }
        });
    });
</script>


<script>
    $(function () {

        var $grid = $('#modelManager-databaseConfig-index-grid'),
            kGrid = $grid.data('kendoGrid'),
            editorInit = {
                testDatabase: function () {

                }
            };


        kGrid.bind('edit', function (e) {

            var optionsContainer = $('fieldset[type="adapter_options-container"]', e.container);
            e.container.find('select[name=adapter]').change(function () {
                var viewType = this.value.toLowerCase() == 'jsonrpc' ? $('div[type=jsonrpc]', e.container) : $('div[type=db]', e.container);
                viewType.show().siblings('div').hide();
            });
        });
    });

    /*
     $(function () {
     var $restfulAddButton = $('#dataSourceConfig-restful-add'),
     $restfulAddContext = $('#dataSourceConfig-restful-add').next(),
     $restfulFieldObj = $restfulAddContext.children('div');

     $restfulAddContext.on('click', 'button', function () {
     $(this).parent().remove();
     });
     $restfulAddButton.click(function () {
     $restfulAddContext.append($restfulFieldObj.clone());
     });

     var $o = $('#modelManager-databaseConfig-index'),
     $divForm = $o.find('>div'),
     $divRestful = $o.find('div[role=modelManager-dataSourceConfig-restful]'),
     $divDb = $o.find('div[role=modelManager-dataSourceConfig-db]');
     $o.find('select[name=adapter]').change(function () {
     if (this.value == 'Restful') {
     $divDb.detach();
     $divRestful.appendTo($divForm);
     } else {
     $divRestful.detach();
     $divDb.appendTo($divForm);
     }
     }).change();
     $o.submit(function (e) {
     e.preventDefault();

     $.post(
     '<?=$this->url('zfegg-model-manager/params', ['controller' => 'data-source-config', 'action' => 'add'])?>',
     $(this).serialize(),
     function () {
     alert('添加成功');
     }
     );
     });
     });*/
</script>
