<script type="text/x-kendo-template" id="modelManager-databaseConfig-template">
    <div class="k-edit-form-container">
        <fieldset>
            <legend>基础配置:</legend>
            <div class="k-edit-label"><label for="name">数据源名称</label></div>
            <div class="k-edit-field">
                <input type="text" class="k-input k-textbox" name="name" required="required" data-bind="value:name">
            </div>
            <div class="k-edit-label"><label for="adapter">数据源适配器</label></div>
            <div class="k-edit-field">
                <?php
                $select = new \Zend\Form\Element\Select(
                    'adapter',
                    ['options' => array_combine($adapters, $adapters),]
                );
                $select->setAttributes(
                    [
                        'required'  => true,
                        'data-bind' => 'value:adapter',
                        'data-role' => 'dropdownlist',
                    ]
                );
                echo $this->formSelect($select); ?>
            </div>
        </fieldset>

        <fieldset>
            <legend>适配器配置:</legend>
            <div name="adapter_options-container"></div>
        </fieldset>

        <fieldset>
            <legend>数据源字段配置:</legend>

            <table>
                <thead>
                <tr>
                    <th></th>
                    <th>字段名</th>
                    <th>类型</th>
                    <th>默认值</th>
                    <th>可编辑</th>
                    <th>可为空</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td><input type="checkbox" checked value="1"></td>
                    <td>x</td>
                    <td><select>
                            <option value="string">String</option>
                            <option value="Int">Int</option>
                            <option value="datetime">DataTime</option>
                            <option value="Enum">Enum</option>
                        </select></td>
                    <td><input type="text"></td>
                    <td><input type="checkbox" checked value="1"></td>
                    <td><input type="checkbox" checked value="1"></td>
                </tr>
                </tbody>
            </table>
        </fieldset>
    </div>
</script>

<style>

    .modelManager-adapter-queryOptions {
        float: left;
        margin-right: 8px;
        min-width: 150px;
    }
</style>
<script type="text/x-kendo-template" id="modelManager-databaseConfig-template-adapter-dbadapter">
    <div>
        <fieldset>
            <legend>数据库配置</legend>
            <div class="k-edit-label"><label>数据库类型</label></div>
            <div class="k-edit-field">
                <select name="adapter_options[driver_options][driver]" required="required">
                    <option value="pdo_mysql">Mysql</option>
                    <option value="ibmdb2">ibmdb2</option>
                    <option value="pdo_oci">Oracle</option>
                    <option value="pdo_pgsql">PgSql</option>
                    <option value="pdo_sqlite">Sqlite</option>
                    <option value="pdo_sqlsrv">SqlServer</option>
                </select>
            </div>
            <div class="k-edit-label"><label>地址</label></div>
            <div class="k-edit-field">
                <input type="text" class="k-input k-textbox" name="adapter_options[driver_options][hostname]"
                       required="required">
            </div>
            <div class="k-edit-label"><label>用户名</label></div>
            <div class="k-edit-field">
                <input type="text" class="k-input k-textbox" name="adapter_options[driver_options][username]"
                       required="required">
            </div>
            <div class="k-edit-label"><label>密码</label></div>
            <div class="k-edit-field">
                <input type="text" class="k-input k-textbox" name="adapter_options[driver_options][password]"
                       required="required" value="">
            </div>
            <div class="k-edit-label"><label>端口</label></div>
            <div class="k-edit-field">
                <input type="text" class="k-input k-textbox" name="adapter_options[driver_options][port]"
                       required="required" data-bind="value:adapter_options.driver_options.port">
            </div>
            <div class="k-edit-label"><label>数据库</label></div>
            <div class="k-edit-field">
                <input type="text" class="k-input k-textbox" name="adapter_options[driver_options][database]"
                       required="required" value="redmine">
            </div>
            <div class="k-edit-label"><label>数据库编码</label></div>
            <div class="k-edit-field">
                <input type="text" class="k-input k-textbox" name="adapter_options[driver_options][charset]"
                       required="required" data-bind="value:adapter_options.driver_options.charset">
            </div>
            <div class="k-edit-field">
                <button type="button" data-name="test">测试数据库连接</button>
            </div>
        </fieldset>
        <fieldset>
            <legend>查询配置</legend>
            <div class="k-edit-label"><label>配置模式</label></div>
            <div class="k-edit-field">
                <label><input type="radio" name="adapter_options[query_options][mode]" value="normal" checked> 普通模式 </label>&nbsp;
                <label><input type="radio" name="adapter_options[query_options][mode]" value="sql"> SQL模式 </label><br>
            </div>
            <div class="clear"></div>
            <fieldset role="mode_normal">
                <legend>普通模式:</legend>
                <div class="modelManager-adapter-queryOptions">
                选择查询表:<br>
                <select name="adapter_options[query_options][table]" size="10">
                </select>
                </div>
                <div class="modelManager-adapter-queryOptions">
                    选择查询字段:<br>
                    <select name="adapter_options[query_options][column]" multiple size="10">
                    </select>
                </div>
                <div class="modelManager-adapter-queryOptions" role="where">
                    选择默认查询条件:<br>
                    <p>
                        <select name="adapter_options[query_options][where][left][]">
                        </select>
                        <select name="adapter_options[query_options][where][operator][]">
                            <option value="=">=</option>
                            <option value="<>">&lt;&gt;</option>
                            <option value="<">&lt;</option>
                            <option value="<=">&lt;=</option>
                            <option value=">">&gt;</option>
                            <option value=">=">&gt;=</option>
                            <option value="like">like</option>
                            <option value="notLike">not like</option>
                            <option value="isNull">is null</option>
                            <option value="isNotNull">is not null</option>
                        </select>
                        <input name="adapter_options[query_options][where][right][]">
                        <button value="-">-</button>
                    </p>
                    <button value="+">+</button>
                </div>
                <div class="modelManager-adapter-queryOptions">
                    选择默认排序:<br>
                    <select name="adapter_options[query_options][order]" multiple size="10">
                    </select>
                </div>
                <div class="clear"></div>
                <br>
                <div>
                    SQL 预览:<br>
                    <pre role="pre_sql"></pre>
                </div>
            </fieldset>
            <div class="clear"></div>
            <fieldset>
                <legend>SQL模式:</legend>
                SQL 语句:
                <textarea rows="10" name="adapter_options[query_options][sql]" class="k-textbox"></textarea>
            </fieldset>
        </fieldset>
    </div>
</script>

<script type="text/x-kendo-template" id="modelManager-databaseConfig-template-adapter-jsonrpc">
    <div type="jsonrpc" class="hidden">
        <div class="k-edit-label"><label>URL地址</label></div>
        <div class="k-edit-field">
            <input required name="adapter_options[url]" type="url" class="k-textbox">
        </div>
        <div class="k-edit-label"><label></label></div>
        <div class="k-edit-field">
            <button>字段检测</button>
        </div>
    </div>
</script>

<div id="modelManager-databaseConfig-index-grid"></div>

<script>
    $(function () {
        var editors = {
            editor: function (container, options) {
                $('<textarea>').appendTo(container).kendoEditor({resizable: true});
            }
        };
        var config = <?=Zend\Json\Json::encode($config, false, array('enableJsonExprFinder' => true));?>;
        var gridSettings = {};

        if (config.columns) {
            gridSettings.columns = config.columns;
        }
        if (config.detailEnable) {
            gridSettings.detailTemplate = config.detailTemplate;
        }
        if (config.toolbar) {
            gridSettings.toolbar = config.toolbar;
        }

        var $grid = $('#modelManager-databaseConfig-index-grid'),
            serviceUrl = '<?=$this->url(null, ['controller' => $id])?>',
            dataSource = new kendo.data.DataSource({
                transport: {
                    read: '<?=$this->url(null, ['controller' => $id, 'action' => 'read'])?>',
                    update: '<?=$this->url(null, ['controller' => $id, 'action' => 'update'])?>',
                    destroy: '<?=$this->url(null, ['controller' => $id, 'action' => 'delete'])?>',
                    create: '<?=$this->url(null, ['controller' => $id, 'action' => 'insert'])?>'
                },
                schema: {
                    model: {
                        id: config.primary,
                        fields: config.fields
                    },
                    "data": "data",
                    "total": "total"
                },
                pageSize: 20,
                serverFiltering: true,
                serverPaging: true,
                serverSorting: true
            });

        $grid.kendoGrid($.extend({
            dataSource: dataSource,
            filterable: {
                extra: false,
                messages: {
                    info: "查找: ",
                    filter: "提交",
                    clear: "清除",
                    selectValue: "------选择------",
                    and: "并且",
                    or: "或者"
                },
                operators: {
                    string: {
                        eq: "等于",
                        startswith: "右模糊查找",
                        contains: "模糊查找"
                    },
                    number: {
                        eq: "等于"
                    },
                    date: {
                        ge: "大于等于",
                        le: "小于",
                        gt: "大于",
                        lt: "小于"
                    },
                    enums: {
                        eq: "满足条件"
                    }
                }
            },
            columns: [],
            selectable: true,
            editable: {
                mode: "popup",
                window: {
                    width: '100%',
                    open: function () {
                        this.maximize();
                    }
                },
                template: kendo.template($("#modelManager-databaseConfig-template").html().replace('&#x3A;', ':'))
            },
            sortable: true,
            change: function () {
                $toolbar.find('a.k-button').removeAttr('disabled');
            },
            pageable: {
                pageSizes: [20, 50, 100]
            }
        }, gridSettings));

        var kGrid = $grid.data('kendoGrid'),
            $toolbar = $grid.find('.k-grid-toolbar');

        $toolbar.on('click', 'a', function () {

            var action = $(this).data('action');

            if (action == 'edit') {
                kGrid.select().each(function () {
                    kGrid.editRow(this);
                });
            } else if (action == 'destroy') {
                kGrid.select().each(function () {
                    kGrid.removeRow(this);
                });
            } else if (action == 'create') {
                return;
            } else if (action == 'excel') {
                window.location = '<?=$this->url(null, ['controller' => $id, 'action' => 'export-excel'])?>?'
                + $.param({
                    filter: kGrid.dataSource.filter(),
                    sort: kGrid.dataSource.filter()
                });
            } else {
                kGrid.select().each(function () {
                    $.post(
                        '<?=$this->url(null, ['controller' => $id, 'action' => 'execute'])?>',
                        {
                            method: action,
                            row: kGrid.dataItem(this).toJSON()
                        },
                        function (r) {
                            if (r.code === 0) {
                                alert(r.msg);
                            } else {
                                alert(r.msg);
                            }
                        }
                    );
                });
            }
        });
    });
</script>

<script>
    $(function () {

        var $grid = $('#modelManager-databaseConfig-index-grid'),
            kTmplDb = kendo.template($('#modelManager-databaseConfig-template-adapter-dbadapter').html()),
            kTmplJsonPpc = kendo.template($('#modelManager-databaseConfig-template-adapter-jsonrpc').html()),
            kGrid = $grid.data('kendoGrid'),
            editorInit = {
                testDatabase: function () {

                }
            },

            initDbEvent = function ($elm) {
                $elm.find('button[data-name=test]').click(function () {
                    var $tmpForm = $('<form>');
                    $tmpForm.append($(this).closest('fieldset').clone());
                    $tmpForm.submit(function () {
                        $.post(
                            '<?=$this->url(null, ['action' => 'test-db-connection'], true)?>',
                            $tmpForm.serialize(),
                            function (r) {
                                if (r.errors) {
                                    alert(r.errors);
                                } else {
                                    alert('连接成功');
                                    initSelectMode($elm, r.tables);

                                }
                            }
                        );
                        return false;
                    }).submit();
                });
            },
            initSelectMode = function ($elm, tables) {
                var getSelect = function (name) { return $('select[name="adapter_options[query_options]['+name+']"]', $elm);},
                    $selectTable = getSelect('table'),
                    $selectColumn = getSelect('column'),
                    $selectOrder = getSelect('order'),
                    $whereSelect = $('div[class=modelManager-adapter-queryOptions][role=where]', $elm),
                    $whereItem = $whereSelect.children('p').clone(),
                    $viewNormalMode = $('fieldset[role="mode_normal"]', $elm),
                    $sqlPreview = $('textarea[role=pre_sql]', $elm)
                    ;
                $whereSelect.children('p').remove();
                $whereSelect.on('click', 'button[value="+"]', function () {
                    $(this).before($whereItem.clone());
                }).on('click', 'button[value="-"]', function () {
                    $(this).parent().remove();
                });
                $selectTable.change(function () {
                    $selectColumn.empty();
                    $selectOrder.empty();
                    $whereSelect.children('p').remove();
                    $whereItem.find('select:eq(0)').children('option').remove();
                    var table = this.value;
                    $.each(tables[table], function (i, column) {
                        $selectColumn.append('<option value="'+column+'">'+column+'</option>');
                        $selectOrder.append('<option value="'+column+' ASC">'+column+' ASC</option>');
                        $selectOrder.append('<option value="'+column+' DESC">'+column+' DESC</option>');
                        $whereItem.find('select:eq(0)').append('<option value="'+column+'">'+column+'</option>');
                    });
                    $whereSelect.children('button[value="+"]').click();
                });
                $selectTable.data('columns', tables);
                $.each(tables, function (table, columns) {
                    $selectTable.append('<option value="'+table+'">'+table+'</option>');
                });

                $elm.on('change', 'select', function () {
                    var sql = "SELECT ";

                    if ($selectColumn.val().length) {
                        sql += $selectColumn.val().join(', ');
                    } else {
                        sql += ' * ';
                    }
                    sql += ' FROM ';
                    sql += $selectTable.val();

                    if ($whereSelect.find('select[name="adapter_options[query_options][where][left][]"]').size()) {

                    }
                });
            };

        kGrid.bind('edit', function (e) {
            var optionsContainer = $('div[name="adapter_options-container"]', e.container);
            console.log(e);
            e.container.find('select[name=adapter]').change(function () {
                var viewType = this.value.toLowerCase() == 'jsonrpc' ? kTmplJsonPpc(e.model) : kTmplDb(e.model),
                    $viewType = $(viewType);
                initDbEvent($viewType);

                optionsContainer.empty().append($viewType)
            });
        });
    });

    /*
     $(function () {
     var $restfulAddButton = $('#dataSourceConfig-restful-add'),
     $restfulAddContext = $('#dataSourceConfig-restful-add').next(),
     $restfulFieldObj = $restfulAddContext.children('div');

     $restfulAddContext.on('click', 'button', function () {
     $(this).parent().remove();
     });
     $restfulAddButton.click(function () {
     $restfulAddContext.append($restfulFieldObj.clone());
     });

     var $o = $('#modelManager-databaseConfig-index'),
     $divForm = $o.find('>div'),
     $divRestful = $o.find('div[role=modelManager-dataSourceConfig-restful]'),
     $divDb = $o.find('div[role=modelManager-dataSourceConfig-db]');
     $o.find('select[name=adapter]').change(function () {
     if (this.value == 'Restful') {
     $divDb.detach();
     $divRestful.appendTo($divForm);
     } else {
     $divRestful.detach();
     $divDb.appendTo($divForm);
     }
     }).change();
     $o.submit(function (e) {
     e.preventDefault();

     $.post(
     '<?=$this->url('zfegg-model-manager/params', ['controller' => 'data-source-config', 'action' => 'add'])?>',
     $(this).serialize(),
     function () {
     alert('添加成功');
     }
     );
     });
     });*/
</script>
